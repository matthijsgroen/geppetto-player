#define A 0.017453292519943295
uniform vec2 viewport;uniform vec3 basePosition;uniform vec3 translate;uniform float mutation;uniform vec4 scale;uniform vec2 uMutValues[MAX_MUT];uniform vec4 uMutVectors[MAX_MUT];uniform int uMutParent[MAX_MUT];attribute vec2 coordinates;attribute vec2 aTextureCoord;varying lowp vec2 vTextureCoord;varying lowp float vOpacity;varying lowp float vBrightness;varying lowp float vSaturation;varying lowp float vTargetHue;varying lowp float vTargetSaturation;mat4 B=mat4(2./viewport.x,0,0,0,0,-2./viewport.y,0,0,0,0,1,0,-1,+1,0,1);float C(float D,float E,float F){float G=abs(D-E);float H=D;float I=E;if(D<E&&abs(D+1.-E)<G){H=D+1.;}if(D>E&&abs(E-D+1.)<G){I=E+1.;}return mod(mix(H,I,F),1.);}vec2 J(int K,int L){vec2 M=uMutValues[K];vec2 N=uControlMutIndices[K];int O=int(N.x);int P=int(N.y);if(P==0){return M;}for(int Q=0;Q<MAX_IT;Q++){if(Q<P){vec3 R=uMutValueIndices[O+Q];float S=uControlValues[int(R.y)];int T=int(floor(R.x+S));int U=int(ceil(R.x+S));float V=S-floor(S);vec2 W=uControlMutValues[T];vec2 X=uControlMutValues[U];vec2 Y=mix(W,X,V);if(L==2||L==5||L==6||L==8){M*=Y;}else if(L==7){M=vec2(C(W[0],X[0],V),Y[1]);}else{M+=Y;}}else{return M;}}return M;}mat3 Z(mat3 a,int K){vec4 mutation=uMutVectors[K];int L=int(mutation.x);vec2 b=J(K,L);vec2 c=mutation.yz;vec3 M=a[0];vec3 d=a[1];vec3 e=a[2];if(L==1){float e=1.;if(mutation.a>0.&&distance(M.xy,c)>mutation.a){e=0.;}M=vec3(M.xy+b*e,M.z);}if(L==2){M=vec3(c.xy+vec2((M.x-c.x)*b.x,(M.y-c.y)*b.y),M.z);}if(L==3){float f=b.x*A;mat2 g=mat2(cos(f),sin(f),-sin(f),cos(f));M=vec3((M.xy-c)*g+c,M.z);}if(L==4){float e=1.-clamp(distance(M.xy,c),0.,mutation.a)/mutation.a;M=vec3(M.xy+b*e,M.z);}if(L==5){M=vec3(M.xy,M.z*b.x);}if(L==6){d=vec3(b.x*d.x,d.yz);}if(L==7){e=vec3(b.xy,e.z);}if(L==8){d=vec3(d.x,b.x*d.y,d.z);}return mat3(M,d,e);}mat3 h(mat3 a,int K){int i=K;mat3 M=a;for(int Q=0;Q<MAX_MUT;Q++){if(i==-1){return M;}M=Z(M,i);i=uMutParent[i];}return M;}void main(){mat3 O=mat3(coordinates+translate.xy,1.,1.,1.,0,0,0,0);mat3 j=h(O,int(mutation));vec3 k=j[0];vec3 l=j[1];vec3 m=j[2];vec4 n=B*vec4((k.xy+basePosition.xy)*scale.x,translate.z-basePosition.z,1.);gl_Position=vec4((n.xy+scale.ba)*scale.y,n.z,1.);vTextureCoord=aTextureCoord.xy;vOpacity=k.z;vBrightness=l.x;vSaturation=l.y;vTargetHue=m.x;vTargetSaturation=m.y;}